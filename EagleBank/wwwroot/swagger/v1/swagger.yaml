openapi: 3.0.4
info:
  title: 'EagleBank, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /v1/accounts:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccountResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AccountResponseDto'
    get:
      tags:
        - Account
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponseDto'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponseDto'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponseDto'
  '/v1/accounts/{id}':
    get:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
    delete:
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/v1/accounts/{accountId}/transactions':
    post:
      tags:
        - Transactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTransactionDto'
      responses:
        '200':
          description: OK
    get:
      tags:
        - Transactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/v1/accounts/{accountId}/transactions/{transactionId}':
    get:
      tags:
        - Transactions
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /v1/users:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: OK
  /v1/users/login:
    post:
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UserDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginDto'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginDto'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginDto'
  '/v1/users/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
            text/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
components:
  schemas:
    AccountDto:
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AccountType'
      additionalProperties: false
    AccountResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/AccountType'
        value:
          type: number
          format: double
      additionalProperties: false
    AccountType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    CreateTransactionDto:
      required:
        - amount
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TransactionType'
        amount:
          type: number
          format: double
      additionalProperties: false
    LoginDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        token:
          type: string
          nullable: true
      additionalProperties: false
    TransactionType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    UserDto:
      required:
        - password
        - username
      type: object
      properties:
        username:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
      additionalProperties: false
    UserResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
      additionalProperties: false